1.
Teamspace application

1.1)
Run Teamspace application from command line:
java -Ddw.server.applicationConnectors[1].keyStorePath=./keys/keystore.jks -jar team-space-server-1.0-SNAPSHOT.jar server config.yml

If remote debug option is needed, use this:
java -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005 -Ddw.server.applicationConnectors[1].keyStorePath=./keys/keystore.jks -jar team-space-server-1.0-SNAPSHOT.jar server config.yml

1.2)
FS layout:
--any-root-folder
    --tss-start.bat (this file includes the single command above to run the application)
    --team-space-server-1.0-SNAPSHOT.jar
    --config.yml
    --keys
      --keystore.jks

1.3)
To run on Windows use:
server\team-space-server\src\main\resources\scripts\tss-start.bat

1.4)
To get an H2 console client use the following instruction from the folder where team-space-server-1.0-SNAPSHOT.jar is located:
java -cp team-space-server-1.0-SNAPSHOT.jar org.h2.tools.Shell -url jdbc:h2:tcp://localhost/~/teamspace -user admin -password admin

This works from either Windows or Linux


2.
Automation

2.1)
Run TestNG automation against Teamspace application:
java -cp team-space-automation-1.0-SNAPSHOT.jar org.testng.TestNG testng.xml

2.2)
FS layout:

--any-root-folder
    --tsa-start.bat (this file includes the single command above to run the application)
    --team-space-automation-1.0-SNAPSHOT.jar

2.3)
To run on Windows use:
automation\team-space-automation\src\main\resources\scripts\tsa-start.bat

3.
Deploy

3.1
To run deploy application:
java -jar team-space-deploy-server-1.5.2.RELEASE.jar
