{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "AWS CloudFormation template for public and private instances creation",

  "Parameters" : {

    "InstanceType" : {
      "Description" : "WebServer EC2 instance type",
      "Type" : "String",
      "Default" : "t2.micro",
      "AllowedValues" : [ "t1.micro","t2.micro","m1.small","m1.medium","m1.large","m1.xlarge","m2.xlarge","m2.2xlarge","m2.4xlarge","m3.xlarge","m3.2xlarge","c1.medium","c1.xlarge","cc1.4xlarge","cc2.8xlarge","cg1.4xlarge"],
      "ConstraintDescription" : "Must be a valid EC2 instance type."
    },

    "UserData" : {
      "Description" : "User data script",
      "Type" : "String",
      "ConstraintDescription" : "Must be a valid bash script"
    },

    "EnvTag" : {
      "Description" : "Environment tag",
      "Type" : "String",
      "ConstraintDescription" : "Must logically represent an environment"
    }
  },

  "Mappings" : {

    "AWSRegion2AMI" : {
          "us-east-1":{
              "CentOS7x8664withUpdatesHVM":"ami-6d1c2007"
          },
          "us-west-2":{
              "CentOS7x8664withUpdatesHVM":"ami-d2c924b2"
          },
          "us-west-1":{
              "CentOS7x8664withUpdatesHVM":"ami-af4333cf"
          },
          "eu-central-1":{
              "CentOS7x8664withUpdatesHVM":"ami-9bf712f4"
          },
          "eu-west-1":{
              "CentOS7x8664withUpdatesHVM":"ami-7abd0209"
          },
          "ap-southeast-1":{
              "CentOS7x8664withUpdatesHVM":"ami-f068a193"
          },
          "ap-southeast-2":{
              "CentOS7x8664withUpdatesHVM":"ami-fedafc9d"
          },
          "ap-northeast-1":{
              "CentOS7x8664withUpdatesHVM":"ami-eec1c380"
          },
          "ap-northeast-2":{
              "CentOS7x8664withUpdatesHVM":"ami-c74789a9"
          },
          "sa-east-1":{
              "CentOS7x8664withUpdatesHVM":"ami-26b93b4a"
          }
    }
  },

  "Resources" : {

    "VPC" : {
      "Type" : "AWS::EC2::VPC",
      "Properties" : {
        "CidrBlock" : "10.0.0.0/16",
        "EnableDnsHostnames" : true,
        "Tags" : [
          {"Key" : "Name", "Value" : {"Fn::Join" : [ "", [ { "Ref" : "EnvTag"}, "-", "VPC" ] ] }}
        ]
      }
    },

    "PublicSubnet" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : "10.0.0.0/24",
        "AvailabilityZone": { "Fn::Select" : [ 0, { "Fn::GetAZs" : "" } ] },
        "MapPublicIpOnLaunch" : true,
        "Tags" : [
          {"Key" : "Name", "Value" : {"Fn::Join" : [ "", [ { "Ref" : "EnvTag"}, "-", "PUBLIC_SUBNET" ] ]} }
        ]
      }
    },

    "InternetGateway" : {
      "Type" : "AWS::EC2::InternetGateway",
      "Properties" : {
        "Tags" : [
          {"Key" : "Name", "Value" : {"Fn::Join" : [ "", [ { "Ref" : "EnvTag"}, "-", "GATEWAY" ] ]} }
        ]
      }
    },

    "AttachGateway" : {
       "Type" : "AWS::EC2::VPCGatewayAttachment",
       "Properties" : {
         "VpcId" : { "Ref" : "VPC" },
         "InternetGatewayId" : { "Ref" : "InternetGateway" }
       }
    },

    "NatGateway" : {
      "DependsOn" : "AttachGateway",
      "Type" : "AWS::EC2::NatGateway",
      "Properties" : {
        "AllocationId" : { "Fn::GetAtt" : ["EIP", "AllocationId"]},
        "SubnetId" : { "Ref" : "PublicSubnet"},
        "Tags" : [
                  {"Key" : "Name", "Value" : {"Fn::Join" : [ "", [ { "Ref" : "EnvTag"}, "-", "NAT_GATEWAY" ] ]} }
        ]
      }
    },
    "EIP" : {
      "Type" : "AWS::EC2::EIP",
      "Properties" : {
        "Domain" : "vpc"
      }
    },

    "PublicRouteTable" : {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : {"Ref" : "VPC"},
        "Tags" : [
          {"Key" : "Name", "Value" : {"Fn::Join" : [ "", [ { "Ref" : "EnvTag"}, "-", "PUBLIC_ROUTE_TABLE" ] ]} }
        ]
      }
    },

    "PublicRoute" : {
      "Type" : "AWS::EC2::Route",
      "DependsOn" : "AttachGateway",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PublicRouteTable" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "GatewayId" : { "Ref" : "InternetGateway" }
      }
    },

    "PublicSubnetRouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PublicSubnet" },
        "RouteTableId" : { "Ref" : "PublicRouteTable" }
      }
    },

    "PrivateSubnetAz1" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : "10.0.1.0/24",
        "AvailabilityZone": { "Fn::Select" : [ 0, { "Fn::GetAZs" : "" } ] },
        "Tags" : [
          {"Key" : "Name", "Value" : {"Fn::Join" : [ "", [ { "Ref" : "EnvTag"}, "-", "PRIVATE_SUBNET_AZ1" ] ]} }
        ]
      }
    },

    "PrivateRouteTableAz1" : {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : {"Ref" : "VPC"},
        "Tags" : [
          {"Key" : "Name", "Value" : {"Fn::Join" : [ "", [ { "Ref" : "EnvTag"}, "-", "PRIVATE_ROUTE_TABLE_AZ1" ] ]} }
        ]
      }
    },

    "PrivateRouteToNatGateway" : {
      "Type" : "AWS::EC2::Route",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PrivateRouteTableAz1" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "NatGatewayId" : { "Ref" : "NatGateway" }
      }
    },

    "PrivateSubnetAz1RouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PrivateSubnetAz1" },
        "RouteTableId" : { "Ref" : "PrivateRouteTableAz1" }
      }
    },

    "PrivateSubnetAz2" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : "10.0.2.0/24",
        "AvailabilityZone": { "Fn::Select" : [ 1, { "Fn::GetAZs" : "" } ] },
        "Tags" : [
          {"Key" : "Name", "Value" : {"Fn::Join" : [ "", [ { "Ref" : "EnvTag"}, "-", "PRIVATE_SUBNET_AZ2" ] ]} }
        ]
      }
    },

    "PrivateRouteTableAz2" : {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : {"Ref" : "VPC"},
        "Tags" : [
          {"Key" : "Name", "Value" : {"Fn::Join" : [ "", [ { "Ref" : "EnvTag"}, "-", "PRIVATE_ROUTE_TABLE_AZ2" ] ]} }
        ]
      }
    },

    "PrivateSubnetAz2RouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PrivateSubnetAz2" },
        "RouteTableId" : { "Ref" : "PrivateRouteTableAz2" }
      }
    },

    "InstanceSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Enable HTTP/SSH access on the configured ports",
        "VpcId" : { "Ref" : "VPC" },
        "SecurityGroupIngress" : [
            { "IpProtocol" : "tcp", "FromPort" : "80", "ToPort" : "80", "CidrIp" : "0.0.0.0/0" } ,
            { "IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "CidrIp" : "0.0.0.0/0" }
        ],
        "Tags" : [
          {"Key" : "Name", "Value" : {"Fn::Join" : [ "", [ { "Ref" : "EnvTag"}, "-", "INSTANCE_SECURITY_GROUP" ] ]} }
        ]
      }
    },

    "InstanceRole": {
         "Type": "AWS::IAM::Role",
         "Properties": {
            "RoleName": {"Fn::Join" : [ "", [ { "Ref" : "EnvTag"}, "-", "ROLE" ] ]},
            "AssumeRolePolicyDocument": {
               "Version" : "2012-10-17",
               "Statement": [ {
                  "Effect": "Allow",
                  "Principal": {
                     "Service": [ "ec2.amazonaws.com" ]
                  },
                  "Action": [ "sts:AssumeRole" ]
               } ]
            },
            "Path": "/"
         }
     },

     "RolePolicies": {
         "Type": "AWS::IAM::Policy",
         "Properties": {
            "PolicyName": {"Fn::Join" : [ "", [ { "Ref" : "EnvTag"}, "-", "POLICY" ] ]},
            "PolicyDocument": {
               "Version" : "2012-10-17",
               "Statement": [ {
                  "Effect": "Allow",
                  "Action": "*",
                  "Resource": "*"
               } ]
            },
            "Roles": [ {
               "Ref": "InstanceRole"
            } ]
         }
      },

      "InstanceProfile": {
         "Type": "AWS::IAM::InstanceProfile",
         "Properties": {
            "InstanceProfileName": {"Fn::Join" : [ "", [ { "Ref" : "EnvTag"}, "-", "INSTANCE_PROFILE" ] ]},
            "Path": "/",
            "Roles": [ {
               "Ref": "InstanceRole"
            } ]
         }
      },

      "PublicInstance" : {
         "Type" : "AWS::EC2::Instance",
         "Properties" : {
      		"AvailabilityZone" : { "Fn::GetAtt" : [ "PublicSubnet", "AvailabilityZone" ] },
      		  "SubnetId" : { "Ref" : "PublicSubnet" },
              "ImageId" : { "Fn::FindInMap" : [ "AWSRegion2AMI", { "Ref" : "AWS::Region" },"CentOS7x8664withUpdatesHVM" ] },
              "UserData" : { "Ref" : "UserData" },
              "SecurityGroupIds" : [ { "Ref" : "InstanceSecurityGroup" } ],
              "IamInstanceProfile" : { "Ref" : "InstanceProfile" },
              "InstanceType" : { "Ref" : "InstanceType" },
      		"Tags" : [
                {"Key" : "Name", "Value" : {"Fn::Join" : [ "", [ { "Ref" : "EnvTag"}, "-", "PUBLIC_INSTANCE" ] ]} }
              ]
            }
      },

      "PrivateInstance" : {
           "Type" : "AWS::EC2::Instance",
           "Properties" : {
                "AvailabilityZone" : { "Fn::GetAtt" : [ "PrivateSubnetAz1", "AvailabilityZone" ] },
                "SubnetId" : { "Ref" : "PrivateSubnetAz1" },
                "ImageId" : { "Fn::FindInMap" : [ "AWSRegion2AMI", { "Ref" : "AWS::Region" },"CentOS7x8664withUpdatesHVM" ] },
                "UserData" : { "Ref" : "UserData" },
                "SecurityGroupIds" : [ { "Ref" : "InstanceSecurityGroup" } ],
                "IamInstanceProfile" : { "Ref" : "InstanceProfile" },
                "InstanceType" : { "Ref" : "InstanceType" },
                "Tags" : [
                  {"Key" : "Name", "Value" : {"Fn::Join" : [ "", [ { "Ref" : "EnvTag"}, "-", "PRIVATE_INSTANCE" ] ]} }
                ]
              }
        }
  },

  "Outputs" : {
    "PublicInstanceDNS" : {
      "Description" : "Public instance DNS",
      "Value" :  { "Fn::GetAtt" : [ "PublicInstance", "PublicDnsName" ]}
    },
    "PrivateInstanceDNS" : {
      "Description" : "Private instance DNS",
      "Value" :  { "Fn::GetAtt" : [ "PrivateInstance", "PrivateDnsName" ]}
    }
  }
}