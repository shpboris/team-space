{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "AWS CloudFormation Sample Template vpc_multiple_subnets.template: Sample template showing how to create a VPC with multiple subnets. The first subnet is public and contains the load balancer, the second subnet is private and contains an EC2 instance behind the load balancer. **WARNING** This template creates an Amazon EC2 instance. You will be billed for the AWS resources used if you create a stack from this template.",

  "Parameters" : {

    "VpcId" : {
      "Description" : "The id of the VPC",
      "Type" : "String"
    },

    "PublicSubnetId" : {
      "Description" : "Public subnet id",
      "Type" : "String"
    },

    "PrivateSubnetAz1Id" : {
      "Description" : "Private subnet AZ1 id",
      "Type" : "String"
    },

    "PrivateSubnetAz2Id" : {
      "Description" : "Private subnet AZ2 id",
      "Type" : "String"
    },

    "InstanceType" : {
      "Description" : "WebServer EC2 instance type",
      "Type" : "String",
      "Default" : "t2.micro",
      "AllowedValues" : [ "t1.micro","t2.micro","m1.small","m1.medium","m1.large","m1.xlarge","m2.xlarge","m2.2xlarge","m2.4xlarge","m3.xlarge","m3.2xlarge","c1.medium","c1.xlarge","cc1.4xlarge","cc2.8xlarge","cg1.4xlarge"],
      "ConstraintDescription" : "Must be a valid EC2 instance type."
    },

    "InstanceCount" : {
      "Description" : "Number of EC2 instances to launch",
      "Type" : "Number",
      "Default" : "1"
    },

    "UserData" : {
      "Description" : "User data script",
      "Type" : "String",
      "ConstraintDescription" : "Must be a valid bash script"
    },

    "EnvTag" : {
      "Description" : "Environment tag",
      "Type" : "String",
      "ConstraintDescription" : "Must logically represent an environment"
    }
  },

  "Mappings" : {

    "AWSRegion2AMI" : {
          "us-east-1":{
              "CentOS7x8664withUpdatesHVM":"ami-6d1c2007"
          },
          "us-west-2":{
              "CentOS7x8664withUpdatesHVM":"ami-d2c924b2"
          },
          "us-west-1":{
              "CentOS7x8664withUpdatesHVM":"ami-af4333cf"
          },
          "eu-central-1":{
              "CentOS7x8664withUpdatesHVM":"ami-9bf712f4"
          },
          "eu-west-1":{
              "CentOS7x8664withUpdatesHVM":"ami-7abd0209"
          },
          "ap-southeast-1":{
              "CentOS7x8664withUpdatesHVM":"ami-f068a193"
          },
          "ap-southeast-2":{
              "CentOS7x8664withUpdatesHVM":"ami-fedafc9d"
          },
          "ap-northeast-1":{
              "CentOS7x8664withUpdatesHVM":"ami-eec1c380"
          },
          "ap-northeast-2":{
              "CentOS7x8664withUpdatesHVM":"ami-c74789a9"
          },
          "sa-east-1":{
              "CentOS7x8664withUpdatesHVM":"ami-26b93b4a"
          }
    }
  },

  "Resources" : {

    "ElasticLoadBalancer" : {
      "Type" : "AWS::ElasticLoadBalancing::LoadBalancer",
      "Properties" : {
        "SecurityGroups" : [ { "Ref" : "LoadBalancerSecurityGroup" } ],
        "Subnets" : [ { "Ref" : "PublicSubnetId" } ],
        "Listeners" : [ { "LoadBalancerPort" : "80", "InstancePort" : "80", "Protocol" : "HTTP" } ],
        "HealthCheck" : {
          "Target" : "HTTP:80/",
          "HealthyThreshold" : "3",
          "UnhealthyThreshold" : "5",
          "Interval" : "90",
          "Timeout" : "60"
        },
        "Tags" : [
          {"Key" : "Name", "Value" : {"Fn::Join" : [ "", [ { "Ref" : "EnvTag"}, "-", "LOAD_BALANCER" ] ]} }
        ]
      }
    },

    "LoadBalancerSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Enable HTTP access on port 80",
        "VpcId" : { "Ref" : "VpcId" },
        "SecurityGroupIngress" : [ { "IpProtocol" : "tcp", "FromPort" : "80", "ToPort" : "80", "CidrIp" : "0.0.0.0/0" } ],
        "SecurityGroupEgress" : [ { "IpProtocol" : "tcp", "FromPort" : "80", "ToPort" : "80", "CidrIp" : "0.0.0.0/0"} ],
        "Tags" : [
          {"Key" : "Name", "Value" : {"Fn::Join" : [ "", [ { "Ref" : "EnvTag"}, "-", "LB_SECURITY_GROUP" ] ]} }
        ]
      }
    },

    "WebServerGroup" : {
      "Type" : "AWS::AutoScaling::AutoScalingGroup",
      "Properties" : {
        "VPCZoneIdentifier" : [{ "Ref" : "PrivateSubnetAz1Id" }],
        "LaunchConfigurationName" : { "Ref" : "LaunchConfig" },
        "MinSize" : "1",
        "MaxSize" : "3",
        "DesiredCapacity" : { "Ref" : "InstanceCount" },
        "LoadBalancerNames" : [ { "Ref" : "ElasticLoadBalancer" } ],
        "Tags" : [ {"Key" : "Name", "Value" : {"Fn::Join" : [ "", [ { "Ref" : "EnvTag"}, "-", "APP_INSTANCE" ] ]}, "PropagateAtLaunch" : "true" } ]
      }
    },

    "LaunchConfig" : {
      "Type" : "AWS::AutoScaling::LaunchConfiguration",
      "Properties" : {
        "ImageId" : { "Fn::FindInMap" : [ "AWSRegion2AMI", { "Ref" : "AWS::Region" },"CentOS7x8664withUpdatesHVM" ] },
        "UserData" : { "Fn::Base64" : { "Ref" : "UserData" } },
        "SecurityGroups" : [ { "Ref" : "InstanceSecurityGroup" } ],
        "IamInstanceProfile" : { "Ref" : "InstanceProfile" },
        "InstanceType" : { "Ref" : "InstanceType" }
      }
    },

    "InstanceSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Enable HTTP/SSH access on the configured ports",
        "VpcId" : { "Ref" : "VpcId" },
        "SecurityGroupIngress" : [
            { "IpProtocol" : "tcp", "FromPort" : "80", "ToPort" : "80", "CidrIp" : "0.0.0.0/0" } ,
            { "IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "CidrIp" : "0.0.0.0/0" }
        ],
        "Tags" : [
          {"Key" : "Name", "Value" : {"Fn::Join" : [ "", [ { "Ref" : "EnvTag"}, "-", "INSTANCE_SECURITY_GROUP" ] ]} }
        ]
      }
    },

    "InstanceRole": {
         "Type": "AWS::IAM::Role",
         "Properties": {
            "RoleName": {"Fn::Join" : [ "", [ { "Ref" : "EnvTag"}, "-", "ROLE" ] ]},
            "AssumeRolePolicyDocument": {
               "Version" : "2012-10-17",
               "Statement": [ {
                  "Effect": "Allow",
                  "Principal": {
                     "Service": [ "ec2.amazonaws.com" ]
                  },
                  "Action": [ "sts:AssumeRole" ]
               } ]
            },
            "Path": "/"
         }
     },

     "RolePolicies": {
         "Type": "AWS::IAM::Policy",
         "Properties": {
            "PolicyName": {"Fn::Join" : [ "", [ { "Ref" : "EnvTag"}, "-", "POLICY" ] ]},
            "PolicyDocument": {
               "Version" : "2012-10-17",
               "Statement": [ {
                  "Effect": "Allow",
                  "Action": "*",
                  "Resource": "*"
               } ]
            },
            "Roles": [ {
               "Ref": "InstanceRole"
            } ]
         }
      },

      "InstanceProfile": {
         "Type": "AWS::IAM::InstanceProfile",
         "Properties": {
            "InstanceProfileName": {"Fn::Join" : [ "", [ { "Ref" : "EnvTag"}, "-", "INSTANCE_PROFILE" ] ]},
            "Path": "/",
            "Roles": [ {
               "Ref": "InstanceRole"
            } ]
         }
      },

      "TempInstance" : {
         "Type" : "AWS::EC2::Instance",
         "Properties" : {
      		  "SubnetId" : { "Ref" : "PublicSubnetId" },
              "ImageId" : { "Fn::FindInMap" : [ "AWSRegion2AMI", { "Ref" : "AWS::Region" },"CentOS7x8664withUpdatesHVM" ] },
              "UserData" : { "Fn::Base64" : { "Ref" : "UserData" } },
              "SecurityGroupIds" : [ { "Ref" : "InstanceSecurityGroup" } ],
              "IamInstanceProfile" : { "Ref" : "InstanceProfile" },
              "InstanceType" : { "Ref" : "InstanceType" },
      		"Tags" : [
                {"Key" : "Name", "Value" : {"Fn::Join" : [ "", [ { "Ref" : "EnvTag"}, "-", "TEMP_INSTANCE" ] ]} }
              ]
            }
      }
  },

  "Outputs" : {
    "SitePublicDNS" : {
      "Description" : "Public DNS of the website",
      "Value" :  { "Fn::GetAtt" : [ "ElasticLoadBalancer", "DNSName" ]}
    }
  }
}