{
  "$schema": "http://schema.management.azure.com/schemas/2014-04-01-preview/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Virtual Machine and DB"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the Virtual Machine and DB"
      }
    },
    "customData": {
      "type": "string",
      "metadata": {
        "description": "Custom data passed to the Virtual Machine."
      }
    },
    "databaseDTU": {
      "type": "int",
      "allowedValues": [
        50,
        100
      ],
      "defaultValue": 50,
      "metadata": {
        "description": "Azure database for MySQL pricing tier"
      }
    },
    "databaseSkuName": {
      "type": "string",
      "allowedValues": [
        "MYSQLB100",
        "MYSQLB50"
      ],
      "defaultValue": "MYSQLB100",
      "metadata": {
        "description": "Azure database for MySQL sku name: MySQL Basic 50 DTU (MYSQLB50)or 100 DTU (MYSQLB100)"
      }
    },
    "databaseSkuSizeMB": {
      "type": "int",
      "allowedValues": [
        102400,
        51200
      ],
      "defaultValue": 51200,
      "metadata": {
        "description": "Azure database for MySQL Sku Size "
      }
    },
    "databaseSkuTier": {
      "type": "string",
      "allowedValues": [
        "Basic"
      ],
      "defaultValue": "Basic",
      "metadata": {
        "description": "Azure database for MySQL pricing tier"
      }
    },
    "mysqlVersion": {
      "type": "string",
      "allowedValues": [
        "5.6",
        "5.7"
      ],
      "defaultValue": "5.6",
      "metadata": {
        "description": "MySQL version"
      }
    },
    "envTag": {
      "type": "string",
      "metadata": {
        "description": "Environment tag"
      }
    }
  },
  "variables": {
    "vmSize": "Standard_DS2_v2",
    "vmName": "[concat(parameters('envTag'), '-', 'APP-INSTANCE')]",
    "uniqueDnsLabelPrefix": "[concat('vm', uniquestring(resourceGroup().id))]",
    "location": "[resourceGroup().location]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSKU": "16.04-LTS",
    "addressPrefix": "10.0.0.0/16",
    "subnet1Name": "[concat(parameters('envTag'), '-', 'PUBLIC_SUBNET')]",
    "subnet1Prefix": "10.0.0.0/24",
    "nicName": "[concat(parameters('envTag'), '-', 'NIC')]",
    "publicIPAddressName": "[concat(parameters('envTag'), '-', 'PUBLIC_IP')]",
    "publicIPAddressType": "Dynamic",
    "virtualNetworkName": "[concat(parameters('envTag'), '-', 'VIRTUAL_NETWORK')]",
    "networkSecurityGroupName": "[concat(parameters('envTag'), '-', 'SECURITY_GROUP')]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
    "subnet1Ref": "[concat(variables('vnetID'),'/subnets/',variables('subnet1Name'))]",
    "apiVersion": "2015-06-15",
    "dbEnvTag": "[toLower(parameters('envTag'))]",
    "databaseName": "[concat(variables('dbEnvTag'), 'database')]",
    "serverName": "[concat(variables('dbEnvTag'), 'sqlserver')]"
  },
  "resources": [
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[variables('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh_rule",
            "properties": {
              "description": "Locks inbound down to ssh default port 22.",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 123,
              "direction": "Inbound"
            }
          },
          {
            "name": "http_rule",
            "properties": {
              "description": "Locks inbound down to ssh default port 22.",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "80",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 124,
              "direction": "Inbound"
            }
          },
          {
            "name": "https_rule",
            "properties": {
              "description": "Locks inbound down to ssh default port 22.",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "443",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 125,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('uniqueDnsLabelPrefix')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroupName'))]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnet1Name')]",
            "properties": {
              "addressPrefix": "[variables('subnet1Prefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnet1Ref')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-04-30-preview",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]",
        "[concat('Microsoft.DBforMySQL/servers/', variables('serverName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "customData": "[base64(parameters('customData'))]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
            }
          ]
        }
      }
    },
    {
      "apiVersion": "2016-02-01-privatepreview",
      "type": "Microsoft.DBforMySQL/servers",
      "kind": "",
      "location": "[resourceGroup().location]",
      "name": "[variables('serverName')]",
      "properties": {
        "version": "[parameters('mysqlVersion')]",
        "administratorLogin": "[parameters('adminUsername')]",
        "administratorLoginPassword": "[parameters('adminPassword')]",
        "storageMB": "[parameters('databaseSkuSizeMB')]"
      },
      "sku": {
        "name": "[parameters('databaseSkuName')]",
        "tier": "[parameters('databaseSkuTier')]",
        "capacity": "[parameters('databaseDTU')]",
        "size": "[parameters('databaseSkuSizeMB')]",
        "family": "SkuFamily"
      },
      "resources": [
        {
          "type": "firewallrules",
          "apiVersion": "2016-02-01-privatepreview",
          "dependsOn": [
            "[concat('Microsoft.DBforMySQL/servers/', variables('serverName'))]"
          ],
          "location": "[resourceGroup().location]",
          "name": "[concat(variables('serverName'),'firewall')]",
          "properties": {
            "startIpAddress": "0.0.0.0",
            "endIpAddress": "255.255.255.255"
          }
        },
        {
          "name": "[variables('databaseName')]",
          "type": "databases",
          "apiVersion": "2016-02-01-privatepreview",
          "properties": {
            "charset": "utf8",
            "collation": "utf8_general_ci"
          },
          "dependsOn": [
            "[concat('Microsoft.DBforMySQL/servers/', variables('serverName'))]"
          ]
        }
      ]
    }
  ],
  "outputs": {
    "sshCommand": {
      "type": "string",
      "value": "[concat('ssh ', parameters('adminUsername'), '@', variables('uniqueDnsLabelPrefix'), '.', resourceGroup().location, '.cloudapp.azure.com')]"
    },
    "publicDns": {
      "type": "string",
      "value": "[concat(variables('uniqueDnsLabelPrefix'), '.', resourceGroup().location, '.cloudapp.azure.com')]"
    }
  }
}

